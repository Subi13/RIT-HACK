# -*- coding: utf-8 -*-
"""DATA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WkSxVU-j4i3dgicgjVcKtA8OjxPbkLi8
"""

!pip install streamlit
!pip install pyngrok==4.1.1



value=4

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# import matplotlib.pyplot as plt
# st.title("Welcome to HEALTH CARE SYSTEM")
# #option=st.selectbox('Select Feature',('Cough','Fatigue','Fever','Blood Pressure','Cholesterol Level','Difficulty Breathing'))
# uploaded_file = st.file_uploader("Upload a CSV file", type=["csv"])
# 
# 
# 
# 
# # Check if a file has been uploaded
# if uploaded_file is not None:
# 
#     selected_values = []
# 
#     if st.checkbox('Cough'):
#         selected_values.append('Cough')
#     if st.checkbox('Fever'):
#         selected_values.append('Fever')
# 
#     if st.checkbox('Fatigue'):
#         selected_values.append('Fatigue')
# 
#     if st.checkbox('Blood Pressure'):
#         selected_values.append('Blood Pressure')
# 
#     if st.button("Predict"):
#         st.write("Predicting....")
#         # Read the uploaded CSV file
#         df = pd.read_csv(uploaded_file)
#         # Display the data
#         st.write("Uploaded CSV data:")
#         st.write("Number of features selected: ",len(selected_values))
#         x = df[selected_values].values
#         y= df.iloc[:, 9].values
#         from sklearn.model_selection import train_test_split
#         x_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.25, random_state=0)
#         #feature Scaling
#         from sklearn.preprocessing import StandardScaler
#         st_x= StandardScaler()
#         x_train= st_x.fit_transform(x_train)
#         x_test= st_x.transform(x_test)
#         from sklearn.linear_model import LogisticRegression
#         classifier= LogisticRegression(random_state=0)
#         classifier.fit(x_train, y_train)
#         y_pred= classifier.predict(x_test)
#         from sklearn.metrics import accuracy_score
#         accuracy = accuracy_score(y_test, y_pred)
#         st.write("Accuracy is",accuracy)
#         count =df['Disease'].value_counts()
#         count
# 
# 
# 
# 
# 
# 
# 
# 
# 
#

!ngrok authtoken 2XW7ZY5v0dsc17lVyhm6KnWd0wW_89tFPKaR6yqzw4AxH9nbX

from pyngrok import ngrok
!streamlit run app.py&>/dev/null&
!pgrep streamlit

public_url = ngrok.connect(port='8501')
public_url